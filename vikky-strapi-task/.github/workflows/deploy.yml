name: CI/CD - Strapi ECS Fargate Deploy

on:
  push:
    branches:
      - main  # ✅ OR change to `vivek` if that's your branch

env:
  AWS_REGION: us-east-2
  ECR_REPO_NAME: strapi-ecr-vivek
  ECS_CLUSTER_NAME: strapi-cluster-vivek
  ECS_SERVICE_NAME: strapi-service-vivek
  TASK_FAMILY: strapi-task-vivek

jobs:
  deploy:
    name: Build, Push Image & Deploy to ECS via Terraform
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repo
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🐳 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 🛠️ Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IMAGE_TAG=latest
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:$IMAGE_TAG
          echo "ECR_IMAGE=$ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: 📦 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: ⚙️ Terraform Init
        run: terraform init

      - name: 📋 Terraform Plan
        run: terraform plan -var="ecr_image_url=${{ env.ECR_IMAGE }}"

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve -var="ecr_image_url=${{ env.ECR_IMAGE }}"
